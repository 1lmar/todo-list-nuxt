name: Deploy Nuxt 3 App

on:
  push:
    branches:
      - main
  # pull_request:
  #   types: [closed]
  #   branches:
  #     - main

jobs:
  tag_release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git tag -l --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Generate new version
        id: create_tag
        run: |
          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v1.0.0"
          else
            IFS='.' read -r -a TAG_PARTS <<< "${LATEST_TAG#v}"
            ((TAG_PARTS[2]++))
            NEW_TAG="v${TAG_PARTS[0]}.${TAG_PARTS[1]}.${TAG_PARTS[2]}"
          fi
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=new_tag::$NEW_TAG"

      - name: Check if tag exists in remote
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/$new_tag$"; then
            echo "Tag $new_tag already exists. Skipping push."
            echo "tag_exists=true" >> $GITHUB_ENV
          else
            echo "tag_exists=false" >> $GITHUB_ENV
          fi

      - name: Create and push new tag
        if: env.tag_exists == 'false'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          git tag $new_tag
          git push origin $new_tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}



  # deploy:
  #   needs: tag_release
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Deploy to server
  #       uses: appleboy/ssh-action@v0.1.10
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         script: |
  #           cd /home/${{ secrets.SSH_USER }}/nuxt-app
  #           git pull origin main
  #           git checkout ${{ needs.tag_release.outputs.new_tag }}
  #           docker compose down
  #           docker compose build --no-cache
  #           docker compose up -d --force-recreate
  #           docker image prune -f
